package com.training;

import javax.jcr.*;

import org.apache.jackrabbit.core.TransientRepository;

import com.training.domains.Article;


public class FindApplication {

    
	public static void printNode(Node node) throws Exception 
	{
		
	    PropertyIterator properties = node.getProperties(); 
        while (properties.hasNext()) { 
            Property property = properties.nextProperty(); 
            if (property.getDefinition().isMultiple()) { 
                
                Value[] values = property.getValues(); 
                for (int i = 0; i < values.length; i++) { 
                    System.out.println( 
                    property.getPath() + " = " + values[i] .getString()); 
                } 
            } else { 
               
                System.out.println( 
                property.getPath() + " = " + property.getString()); 
            } 
        }
    
	}

	
	public static Article parseToArticle(Node node) throws RepositoryException
	{
		     Article article = new Article();
	        article.setId(node.getName());
	        article.setTitle(node.getProperty("title").getString());
	        article.setAuthor(node.getProperty("author").getString());
	         article.setDescription(node.getProperty("description").getString());
	         article.setKeywords(node.getProperty("keywords").getString());
	        
	        return article;
	    
	}
	
	
	public static void main(String[] args) {

		Repository repository = new TransientRepository(); 
        try {

        	Session session = repository.login( 
                    new SimpleCredentials("admin", "admin".toCharArray())); 

            Node root = session.getRootNode();
            
            Node node = root.getNode("101");
            
          
            Article obj =parseToArticle(node);
            
            
            System.out.println(obj);
            
            
            Node node2=root.getNode("101/pages/jcr:data");
            System.out.println(node2 +"===================");
          
            
          printNode(node);
          
          
          NodeIterator nodes = node.getNodes(); 
          while (nodes.hasNext()) { 
              printNode(nodes.nextNode()); 
          }
            
           
                     

        }
        catch(Exception e)
        {
        	e.printStackTrace();
        }
			}

}
